AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Lambda sending emails


Globals:
  Function:
    Timeout: 900
    MemorySize: 1798
    Runtime: java11

Resources:
  DlrNvaEmailServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [ lambda.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Policies:
        - PolicyName: writeLog
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'
        - policyName: sendMail
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: "*"

  EmailGatewayAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName}"
      StageName: v1
      EndpointConfiguration:
        Type: PRIVATE
      MethodSettings:
        - ResourcePath: /email
          HttpMethod: POST
      DefinitionBody:
        openapi: 3.0.0
        info:
          title: Email service for NVA and DLR
          version: '1.0'
        x-amazon-apigateway-request-validators:
          body-only:
            validateRequestBody: true
            validateRequestParameters: false
        paths:
          /email:
            post:
              summary: Sends email
              description: Sends email with specification in the request body
              consumes:
                - application/json
              produces:
                - application/json
              x-amazon-apigateway-request-validator : body-only
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DlrNvaEmailServiceFunction.Arn}/invocations
                responses: { }
                httpMethod: POST
                type: AWS_PROXY
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Email'

  components:
    schemas:
      Email:
        type: object
        required:
          - from_name
          - to_name
          - subject
        properties:
          from_name:
            type: string
            minLength: 3
            maxLength: 256
          to_name:
            type: string
            minLength: 3
            maxLength: 256
          subject:
            type: string
            minLength: 3
            maxLength: 256
          cc:
            type: string
            minLength: 3
            maxLength: 256
          bcc:
            type: string
            minLength: 3
            maxLength: 256
          text:
            type: string
            maxLength: 65000
          text_html:
            type: string
            maxLength: 65000

  DlrNvaEmailServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: email-service
      Handler: no.sikt.nva.email-service.EmailRequestHandler::handleRequest
      Role: !GetAtt DlrNvaEmailServiceRole.Arn
      Runtime: java11
      MemorySize: 1798
      Events:
        SendEmailRequest:
          Type: Api
          Properties:
            RestApiId: !Ref EmailGatewayAPI
            Method: post
            Path: /email